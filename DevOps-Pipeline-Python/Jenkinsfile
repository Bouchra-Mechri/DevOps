pipeline {
    agent any
    environment {
        rcred = 'dockerhub'
        rname = 'survey-app-img'
    }
    

    stages {
         stage('Checkout'){
            agent any
            steps{
                checkout scm
            }
        }
        stage('build') {
            steps {
             script {
    withCredentials([usernamePassword(credentialsId: rcred, usernameVariable: 'ACR_USER', passwordVariable: 'ACR_PASSWORD')]) {
        sh "docker login --username ${ACR_USER} --password ${ACR_PASSWORD}"
        sh "docker build -t bouchra445/survey-app-img:$BUILD_ID DevOps-Pipeline-Python/Python"
        sh "docker tag bouchra445/survey-app-img:$BUILD_ID bouchra445/survey-app-img:$BUILD_ID"
        sh "docker push bouchra445/survey-app-img:$BUILD_ID"
               
    }
}

            }
        }
        stage('gitops'){
            steps{
                script{
                     sh "sed -i 's|image: bouchra445/survey-app-img|image: bouchra445/survey-app-img:$BUILD_ID|' DevOps-Pipeline-Python/k8s/deployment.yaml"
        withCredentials([string(credentialsId: 'gitjenkins', variable: 'GITHUB_TOKEN')]) {
                          // Commit the changes to the git repository
        sh "git config --global user.email 'mechrib466@gmail.com'"
        sh "git config --global user.name 'Bouchra-Mechri'"

                            // Use the https://x-access-token:<token>@github.com/... format for the remote URL
                            def gitRemoteUrl = "https://x-access-token:${GITHUB_TOKEN}@github.com/Bouchra-Mechri/DevOps.git"
                            sh "git remote set-url origin ${gitRemoteUrl}"
git checkout -b main
                            // Commit and push the changes
                            sh 'git add .'
                            sh 'git commit -m "Update version"'
                            sh 'git push origin main'
                        }
      
       
                }
            }
        }
        stage('logout'){
            agent any
            steps {
                sh 'docker logout'
            }
        }
    }
}
